import { Formik } from "formik"
import React, { useEffect, } from "react"
import s from "./Entrance.module.scss"
import FacebookIcon from "../assets/icons/FacebookIcon.svg"
import GoogleIcon from "../assets/icons/GoogleIcon.svg"
import { useHistory } from "react-router"
import { useDispatch, useSelector } from "react-redux"
import { mainSelector, setIsAuth } from "./mainSlicer"

export const Entrance = () => {

    const history = useHistory()
    const dispatch = useDispatch()

    const { users, isAuth } = useSelector(mainSelector)

    const onShowConditionsClick = () => {
        history.push("/forgetpassword")
    }

    const confirmLogin = () => {
        dispatch(setIsAuth(true))
        history.push("/profilepage")
    }

    useEffect(() => {
        isAuth && history.push("/profilepage")
    }, [isAuth])

    return (
        <div className={s.entranceWrapper}>
            <h1>–í–æ–π—Ç–∏</h1>
            <div className={s.moduleDiscription}>
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞ üëã
            </div>
            <div className={s.socialNetworks}>
                <button>
                    <img alt="Facebook" src={FacebookIcon} /> –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Facebook
                </button>
                <button>
                    <img alt="Google" src={GoogleIcon} /> –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
                </button>
            </div>
            <div className={s.moduleDiscription}>
                –∏–ª–∏
            </div>

            <Formik
                initialValues={{ email: '', password: '' }}
                validate={values => {
                    const errors = {}
                    if (!values.email || !values.password) {
                        if (!values.email) {
                            errors.email = '–í–≤–µ–¥–∏—Ç–µ email'
                        } else if (!values.password) {
                            errors.password = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å'
                        }
                    } else if (
                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.com$/i.test(values.email)
                    ) {
                        errors.email = '–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å –≤ —É–∫–∞–∑–∞–Ω–∏–∏ –ø–æ—á—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞'
                    }
                    return errors
                }}
                onSubmit={(values, actions) => {
                    users.some(user => user.email === values.email)
                        ? users.filter(user => user.email === values.email)[0].password === values.password
                            ? confirmLogin()
                            : actions.setStatus('–ù–µ–≤–µ—Ä–Ω—ã–π –µmail –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
                        : actions.setStatus('–ù–µ–≤–µ—Ä–Ω—ã–π –µmail –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
                }}
            >
                {({
                    values,
                    errors,
                    touched,
                    status,
                    handleChange,
                    handleBlur,
                    handleSubmit
                }) => (
                    <form onSubmit={handleSubmit}>
                        <input
                            className={(errors.email || status) && s.errorField}
                            type="email"
                            name="email"
                            onChange={handleChange}
                            onBlur={handleBlur}
                            value={values.email}
                            placeholder="email"
                        />
                        <input
                            className={(errors.password || status) && s.errorField}
                            type="password"
                            name="password"
                            onChange={handleChange}
                            onBlur={handleBlur}
                            value={values.password}
                            placeholder="–ü–∞—Ä–æ–ª—å"
                        />
                        {errors.email && touched.email && errors.email}
                        {errors.password && touched.password && errors.password}
                        {status && <div className={s.textSuccess}>{status}</div>}
                        <button type="submit">
                            –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                        </button>
                    </form>
                )}
            </Formik>
            <span onClick={onShowConditionsClick}>–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</span>
        </div>
    )
}